{
{{$email := $.Attributes.email}}
{{ if not $.Attributes.email}}
{{$email = $.Username}}
{{end}}
{{$name := $.Attributes.name}}
{{ if not $.Attributes.name}}
{{$name = $email}}
{{end}}
  "objects": [
    {
      "key": "{{ $.Username }}",
      "type": "user",
      "displayName": "{{ $name }}",
      "created_at":"{{ $.UserCreateDate }}",
      "properties":{
        {{ fromEnv "connection_id" "ASERTO_CONNECTION_ID" }},
        "email": "{{ $email }}"
      }
    },
    {
      "key": "{{ $email }}",
      "type": "identity",
        "properties": {
          "kind": "IDENTITY_KIND_EMAIL",
          "provider": "cognito",
          {{ fromEnv "connection_id" "ASERTO_CONNECTION_ID" }}
        }
    },
    {
      "key": "{{ $.Username }}",
      "type": "identity",
      "properties": {
        "kind": "IDENTITY_KIND_USERNAME",
        "provider": "cognito",
        {{ fromEnv "connection_id" "ASERTO_CONNECTION_ID" }},
        "verified": true
      }
    }
    {{ if $.Groups }}, {{ end }}

    {{ range $i, $element := $.Groups }}
      {{ if $i }},{{ end }}
      {
        "key": "{{$element.GroupName}}",
        "displayName": "{{$element.Description}}",
        "type": "group",
        "properties":{
          {{ fromEnv "connection_id" "ASERTO_CONNECTION_ID" }}
        }
      }
    {{ end }}
  ],
  "relations":[  
    {  
      "relation": "identifier",
      "subject": {
        "type": "user",
        "key": "{{$.Username}}"
      },
      "object": {
        "type": "identity",
        "key": "{{$.Username}}"
      }
    },
    {  
      "relation": "identifier",
      "subject": {
        "type": "user",
        "key": "{{$.Username}}"
      },
      "object": {
        "type": "identity",
        "key": "{{$email}}"
      }
    }

    {{ if $.Groups }}, {{ end }}

    {{ range $i, $element := $.Groups }}
      {{ if $i }},{{ end }}
      {
      "relation": "member",
              "subject": {
                  "type": "user",
                  "key": "{{$.Username}}"
              },
              "object": {
                  "type": "group",
                  "key": "{{$element.GroupName}}"
              }
      }
    {{ end }}
  ]
}
